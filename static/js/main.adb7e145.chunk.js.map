{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","createStyles","root","textAlign","pd","paddingBottom","spacing","App","classes","useState","email","setEmail","error","setError","helperMsg","setHelperMsg","showTip","setShowTip","tipMsg","setTipMsg","pending","setPending","testRe","RegExp","octokit","Octokit","baseUrl","Alert","props","elevation","variant","handleClose","event","reason","className","Snackbar","open","autoHideDuration","onClose","severity","Card","style","minWidth","CardContent","margin","Typography","gutterBottom","component","TextField","id","label","value","InputLabelProps","shrink","helperText","onChange","target","test","split","length","width","Button","disableElevation","onClick","rest","orgs","createInvitation","org","then","resp","CircularProgress","maxHeight","maxWidth","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adb7e145.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport {\n    Button,\n    Card,\n    CardContent,\n    CircularProgress,\n    createStyles,\n    makeStyles, Snackbar,\n    TextField,\n    Theme,\n    Typography\n} from '@material-ui/core';\nimport MuiAlert, {AlertProps} from '@material-ui/lab/Alert';\nimport {Octokit} from \"@octokit/rest\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            textAlign: 'center'\n        },\n        pd: {\n            paddingBottom: theme.spacing(2),\n        }\n    }),\n);\n\nfunction App() {\n    const classes = useStyles();\n\n    const [email, setEmail] = useState<string>(\"\");\n    const [error, setError] = useState<boolean>(false);\n    const [helperMsg, setHelperMsg] = useState<string>('请输入您的校园邮箱');\n    const [showTip, setShowTip] = useState<boolean>(false);\n    const [tipMsg, setTipMsg] = useState<string>('');\n    const [pending, setPending] = useState<boolean>(false);\n\n    const testRe = new RegExp('@jgsu.edu.cn$');\n\n    const octokit = new Octokit({\n        baseUrl: \"https://auth.github.learningman.top/safe\"\n    })\n\n    function update(event: React.ChangeEvent<HTMLTextAreaElement>): void {\n        const value = event.target.value;\n        setEmail(() => value);\n        const err = !testRe.test(value);\n        if (err) {\n            setHelperMsg('请使用 @jgsu.edu.cn');\n            setError(() => true);\n        } else {\n            if (value.split('@')[0].length === 10) {\n                setHelperMsg('格式正确');\n                setError(() => false)\n            } else {\n                setHelperMsg('学号应为10位')\n                setError(() => true)\n            }\n        }\n\n    }\n\n    function submit(): void {\n        if (!email) {\n            setHelperMsg('请输入邮箱');\n            setError(true);\n            return;\n        }\n        if (error) {\n            return;\n        }\n        if (email.split('@')[0].length !== 10) {\n            setHelperMsg('请检查邮箱前缀');\n            setError(true);\n            return;\n        }\n        setPending(true);\n        octokit.rest.orgs.createInvitation({\n            org: 'DipperLaboratory',\n            email: email\n        }).then((resp) => {\n            setPending(false);\n            setTipMsg(`邀请已发送至 ${email}`);\n            setShowTip(true);\n        })\n    }\n\n    function Alert(props: AlertProps) {\n        return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n    }\n\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\n        if (reason === 'clickaway') {\n            return;\n        }\n\n        setShowTip(false);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Snackbar open={showTip} autoHideDuration={6000} onClose={handleClose}>\n                <Alert onClose={handleClose} severity=\"success\">\n                    {tipMsg}\n                </Alert>\n            </Snackbar>\n            <header className=\"App-header\">\n                <Card style={{minWidth: 350}}>\n                    <CardContent style={{margin: \"24px\"}}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.pd}>北斗注册</Typography>\n                        <TextField id=\"outlined-basic\" label=\"Email\" variant=\"outlined\"\n                                   value={email}\n                                   error={error}\n                                   InputLabelProps={{\n                                       shrink: true,\n                                   }}\n                                   helperText={helperMsg}\n                                   onChange={update}\n                                   style={{width: \"100%\"}} className={classes.pd}/>\n                        <Button variant=\"contained\" disableElevation onClick={submit}>\n                            {pending ? <CircularProgress style={{maxHeight: \"24.5px\", maxWidth: \"24.5px\"}}/> : \"提交\"}\n                        </Button>\n                    </CardContent>\n                </Card>\n            </header>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}